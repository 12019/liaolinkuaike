/******************************************************************************
Copyright 2005 大连易达通电子有限公司
All rights riserved.

文件名  ：ydt.h
模块名称：

当前版本：0.0.1
修改人	：许岩
完成日期：2005.04.06
升级说明：create
******************************************************************************/
#ifndef __YDT_H__
#define __YDT_H__

#include "data_type.h"
//#include "main.h"

#define COM1_RETRY_TIMES 2



/*****************************************************************
函数原型：Get_Time
功能描述：读取时间，读取两次，为了防止偶尔一次不成功
参数描述：
参数名称：	输入/输出？	类型		描述
*time_data	输出   _TIME	7个字节长，数据从头到尾顺序是世纪 年 月 日 时 分 秒
返  回  值：ok(0)-成功 
				notok(0xFF)－失败
作      者	：许岩
日      期：2005-04-12
修改历史：
日期		修改人		修改描述
------		---------	-------------
*****************************************************************/
INT8U Get_Time(BUS_TIME *time_data);



/*****************************************************************
函数原型：Modify_Time
功能描述：修改时间，修改两次，为了防止偶尔一次不成功
参数描述：
参数名称：	输入/输出？	类型		描述
*time_data	输入	_TIME	7个字节长，数据从头到尾顺序是世纪 年 月 日 时 分 秒
返  回  值：ok(0)-成功 
				notok(0xFF)－失败
作      者	：许岩
日      期：2005-04-12
修改历史：
日期		修改人		修改描述
------		---------	-------------
*****************************************************************/
INT8U Modify_Time(BUS_TIME const * const time_data);



/*****************************************************************
函数原型：CheckTimeFormat
功能描述：检查时间格式是否合法
参数描述：
参数名称：	输入/输出？	类型		描述
time		输入  			const _TIME *	7个字节长，数据从头到尾顺序是世纪 年 月 日 时 分 秒

返  回  值：ok(0)-成功 
				notok(0xFF)－失败
作      者	：黄立国、许岩、何文荣
日      期：2003-05-12
修改历史：
日期		修改人		修改描述
------		---------	-------------
*****************************************************************/
INT8U CheckTimeFormat(const BUS_TIME *time);



/******************************************************************************
 函数名称：ascii_to_hex
 功能描述：把一个0-9的ascii代码，转化为16进制数
 参数名称： 输入/输出？ 类型        描述
 num        输入        INT8U           要转化为ascii代码的数，要求范围0-9 a-f A-F

 返  回  值：转化后的16进制数

 作      者 ：许岩
 日      期：2004-09-02
 修改历史：
		日期        修改人      修改描述
		------      ---------   -------------
******************************************************************************/
INT8U ascii_to_hex(INT8U num);



/*****************************************************************
函数原型：bcdtohex
功能描述：bcd码转换为hex码
参数描述：
参数名称：	输入/输出？	类型		描述
-----------		-----------	------	   	-------
bcd				输入			INT8U		输入的bcd码

返  回  值：转换后的hex码
作      者	：许岩
日      期：2006-01-09
修改历史：
日期		修改人		修改描述
------		---------	-------------
*****************************************************************/
INT8U bcdtohex(INT8U bcd);



/******************************************************************************
 函数名称：ascii
 功能描述：把一个0-9的数转化为ascii代码，此函数也可扩展用于通讯中，通讯中涉及到一些A-F的非法输入，认为合法
 参数名称：	输入/输出？	类型		描述
 num		输入		INT8U			要转化为ascii代码的数，要求范围0-9
 
 返  回  值：转化后的ascii代码
 
 作      者	：许岩
 日      期：2004-09-02
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
******************************************************************************/
INT8U ascii(INT8U num);



// *****************************************************************
// 功能：在屏幕上输出字符
// 入口参数：	lb->显示输出字符
// 出口参数：	Null
// 作者：
// 函数出处：EH0218---COMMON.C例子程序
// *****************************************************************
char HextoBcd(char sour);



/******************************************************************************
 函数名称：atoh
 功能描述：ascii转换为hex码
 参数描述：
 参数名称： 输入/输出？ 类型		描述
				
 返  回  值：无
				   
 作 	 者 ：许岩
 日 	 期：2005-04-07
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
******************************************************************************/
void atoh(void *des, INT8U *sour, int ascii_len);



/******************************************************************************
 函数名称：hextobcd
 功能描述：把一个16进制数，转化为bcd码
 参数名称： 输入/输出？ 类型        描述
 num        输入        INT8U           要转化为bcd码的数

 返  回  值：转化后的bcd码

 作      者 ：许岩
 日      期：2004-09-02
 修改历史：
		日期        修改人      修改描述
		------      ---------   -------------
******************************************************************************/
INT8U hextobcd(INT8U num);



/******************************************************************************
 函数名称：ascii_comm
 功能描述：把一个0-9的数转化为ascii代码，此函数也可扩展用于通讯中，通讯中涉及到一些A-F的非法输入，认为合法
 参数名称：	输入/输出？	类型		描述
 num		输入		INT8U			要转化为ascii代码的数，要求范围0-9
 
 返  回  值：转化后的ascii代码
 
 作      者	：许岩
 日      期：2004-09-02
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
******************************************************************************/
INT8U ascii_comm(INT8U num);



/******************************************************************************
 函数名称：htoa
 功能描述：hex转换为ascii码
 参数描述：
 参数名称： 输入/输出？ 类型		描述

 返  回  值：无

 作 	 者 ：许岩
 日 	 期：2005-04-07
 修改历史：
	 日期		修改人		修改描述
	 ------		---------	-------------
******************************************************************************/
void htoa(void *des, INT8U *sour, int hex_len);



/******************************************************************************
 函数名称：SleepMs
 功能描述：延时函数，11.0592M*4晶振专用，开mem加速
 参数名称：	输入/输出？	类型		描述
 _ms	输入	INT16U				要延时的倍数 1ms*?
 
 返  回  值：无
 
 作      者	：许岩
 日      期：2004-09-02
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
******************************************************************************/
void SleepMs(INT16U _ms);



/******************************************************************************
 函数名称：lcddisp
 功能描述：显示函数
 参数名称：	输入/输出？	类型		描述
 line		输入		INT16U		行 1~4
 col		输入		INT16U		列 1~20
 str		输入		INT8U *		要显示的内容
 
 返  回  值：无
 
 作      者：许岩
 日      期：2004-09-02
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
******************************************************************************/
void lcddisp(INT16U line, INT16U col, const INT8U *str);



/******************************************************************************
 函数名称：browse_menu
 功能描述：菜单函数
 参数名称：	输入/输出？	类型		描述
 startline	输入		INT8U		菜单起始显示行 1~4
 title		输入		INT8U *		菜单提示, 不超过8个汉字, 在第一行显示
 p_menu		输入		INT8U *		菜单，每行10个汉字，不够补空格  
 allow_exit	输入		INT8U		是否允许按取消键退出TRUE=允许 FALSE=不允许 
 
 返  回  值：选择的菜单号  0为第一条
				-1 = 取消键 
 
 作      者：许岩
 日      期：2012-10-29
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
******************************************************************************/
INT8S browse_menu(INT8U startline, INT8U *title, INT8U *p_menu, INT8U allow_exit);



/******************************************************************************
 函数名称：browse_menu2
 功能描述：菜单函数,带起始默认行的
 参数名称：	输入/输出？	类型		描述
 startline	输入		INT16U		菜单起始显示行 1~4
 title		输入		INT8U *		菜单提示, 不超过8个汉字, 在第一行显示
 p_menu		输入		INT8U *		菜单，每行10个汉字，不够补空格  
 allow_exit	输入		INT8U		是否允许按取消键退出TRUE=允许 FALSE=不允许 
 default_line输入		INT16U		起始默认行
 
 返  回  值：选择的菜单号  0为第一条
		-1 = 取消键 
 
 作      者：许岩
 日      期：2012-10-29
 修改历史：
	日期		修改人		修改描述
	------		---------	-------------
******************************************************************************/
INT16S browse_menu2(INT16U startline, INT8U *title, INT8U *p_menu, INT8U allow_exit, INT16U default_line);



/******************************************************************************
 函数名称：lcddisperr
 功能描述：液晶屏提示错误
 参数名称：	输入/输出？	类型		描述
 str		输入		char *		要显示的内容
 
 返  回  值：无
 
 作      者：许岩
 日      期：2012-10-29
 修改历史：
	日期		修改人		修改描述
	------		---------	-------------
******************************************************************************/
void lcddisperr(const char *str);



/*****************************************************************
 函数原型：param_factory_default()
 功能描述：参数恢复出厂设置
 参数描述：	
 参数名称：	输入/输出？	类型		描述
 level		输入		INT8U		初始化的等级0-不初始化记录和备份记录文件 1-只初始化记录文件 2-记录和备份记录文件都初始化
				 
 返回值：	无
 
 作  者：	许岩
 日  期：	2004-09-17
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
*****************************************************************/
void param_factory_default(INT8U level);



/******************************************************************************
 函数名称：WriteParam
 功能描述：保存参数
 参数描述：
 参数名称： 输入/输出？ 类型        描述

 返  回  值：无

 作      者 ：许岩
 日      期：2006-08-02
 修改历史：
		日期        修改人      修改描述
		------      ---------   -------------
******************************************************************************/
void WriteParam(void);



/******************************************************************************
 函数名称：ReadParam
 功能描述：读取参数
 参数描述：
 参数名称： 输入/输出？ 类型        描述

 返  回  值：EA_ucReadParamFile 的返回 EM_SUCCESS表示成功 其他说明失败

 作      者 ：许岩
 日      期：2006-08-02
 修改历史：
		日期        修改人      修改描述
		------      ---------   -------------
******************************************************************************/
INT8U ReadParam(void);



/*****************************************************************
函数原型：Cal_Crc
 功能描述：计算一串数据的CRC值，采用CCITT算法
 参数描述：
 参数名称：	输入/输出？	类型		描述
 data_to_cal_crc	输入	INT8U const *		要进行CRC计算的数组的起始指针
 len				 		输入	INT16U				要进行CRC计算的数组的长度

 返  回  值：uint型的CRC值(2字节)
 作      者	：许岩
 日      期：2004-02-04
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
*****************************************************************/
INT16U Cal_Crc(INT8U const *data_to_cal_crc, INT16U len);



/******************************************************************************
 函数名称：store_record
 功能描述：储存记录
 参数名称：	输入/输出？	类型		描述
 rec		输入		INT8U *		记录
 
 返  回  值：无
 
 作      者：许岩
 日      期：2012-10-29
 修改历史：
	日期		修改人		修改描述
	------		---------	-------------
******************************************************************************/
void store_record(INT8U *rec);



/******************************************************************************
 函数名称：browse_menu_time
 功能描述：菜单函数，带显示时间的，主菜单专用
 参数名称：	输入/输出？	类型		描述
 startline	输入		INT8U		菜单起始显示行 1~4
 title		输入		INT8U *		菜单提示, 不超过8个汉字, 在第一行显示
 p_menu		输入		INT8U *		菜单，每行10个汉字，不够补空格  
 allow_exit	输入		INT8U		是否允许按取消键退出TRUE=允许 FALSE=不允许 
 
 返  回  值：选择的菜单号  0为第一条
		-1 = 取消键 
 
 作      者：许岩
 日      期：2012-10-29
 修改历史：
	日期		修改人		修改描述
	------		---------	-------------
******************************************************************************/
INT8S browse_menu_time(INT8U startline, INT8U *title, INT8U *p_menu, INT8U allow_exit);



/******************************************************************************
 函数名称：get_input_str
 功能描述：获取字符串
 参数名称：	输入/输出？	类型		描述
 iStartLine	输入		int			输入起始行
 iStartCol	输入		int			输入起始列
 uiMinText	输入		uint		菜单，每行10个汉字，不够补空格  
 uiMaxText	输入		uint		是否允许按取消键退出TRUE=允许 FALSE=不允许 
 
 返  回  值：选择的菜单号  0为第一条
		-1 = 取消键 
 
 作      者：许岩
 日      期：2012-10-29
 修改历史：
	日期		修改人		修改描述
	------		---------	-------------
******************************************************************************/
INT8U get_input_str(int iStartLine, int iStartCol, uint uiMinText, uint uiMaxText, char *pcString);



/*****************************************************************
函数原型：cal_crc
 功能描述：计算一串数据的CRC值，采用CCITT算法
 参数描述：
 参数名称：	输入/输出？	类型			描述
 buf		输入		INT8U const *	要进行CRC计算的数组的起始指针
 len		输入		INT16U			要进行CRC计算的数组的长度

 返  回  值：uint型的CRC值(2字节)
 作      者：许岩
 日      期：2004-02-04
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
*****************************************************************/
INT16U cal_crc(INT8U const *buf, INT16U len);



/******************************************************************************
 函数名称：crc_check
 功能描述：对接收到的数据进行CRC校验
 参数描述：
 参数名称：	输入/输出？	类型		描述
 rcv_buf	输入		const INT8U*	要进行BCC校验的数据缓冲区
 rcvd_len	输入		INT16U		接收到的长度
				
 返  回  值：ok(0)-成功
				 notok(0xFF)-失败(BCC校验错误)
				   
 作      者	：许岩
 日      期：2004-09-02
 修改历史：
		日期		修改人		修改描述
		------		---------	------------- 
******************************************************************************/
INT8U crc_check(const INT8U *rcv_buf, INT16U rcvd_len);



/*****************************************************************
 函数原型：comm_add_end
 功能描述：算出2字节crc附在包尾
 参数描述：
 参数名称：		输入/输出？	类型		描述
 -----------	-----------	------	   	-------
 snd_buf		输入		INT8U  * 	发送缓冲区
 snd_length		输入		INT16U const要发送的长度

 返 回 值：无
 作    者：许岩
 日    期：2013-10-22
 修改历史：
 日期		修改人		修改描述
 ------		---------	-------------
*****************************************************************/
void comm_add_end(INT8U *snd_buf, INT16U const snd_length);



/******************************************************************************
 函数名称：com1_send_hex
 功能描述：
 参数描述：
 参数名称： 输入/输出？ 类型		描述
 str_to_send	输入	INT8U *		要发送的字符串
 len			输入	INT16U		长度
				
 返  回  值：无
				   
 作 	 者 ：许岩
 日 	 期：2005-04-07
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
******************************************************************************/
void com1_send_hex(INT8U *str_to_send, INT16U len);



/*****************************************************************
函数原型：com1_gets
功能描述：串口1接收
参数描述：
参数名称：		输入/输出？	类型		描述
-----------		-----------	------	   	-------
str_got			输出		INT8U*		得到的字符串
timeout_start	输入		INT32U		首字超时，单位mS，0死等
timeout			输入		INT16U		接收字节间隔超时，单位mS

 返  回  值：ok(0)-成功
				 KEY_CANCEL-按退出键了
				 notok(0xFF)-失败，超时
作      者	：许岩
日      期：2005-08-20
修改历史：
日期		修改人		修改描述
------		---------	-------------
*****************************************************************/
INT8U com1_gets(INT8U *str_got, INT16U *rcv_len, INT32U timeout_start, INT16U timeout);



/******************************************************************************
 函数名称：uart1_buf_flush
 功能描述：清空串口1缓存
 参数描述：
 参数名称： 输入/输出？ 类型		描述

 返  回  值：无

 作 	 者 ：许岩
 日 	 期：2005-04-11
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
******************************************************************************/
void uart1_buf_flush(void);



/*****************************************************************
函数原型：com1_getch
功能描述：串口1接收
参数描述：
参数名称：		输入/输出？	类型		描述
-----------		-----------	------	   	------- 
ch				输出		INT8U *		得到的数

返  回  值：ok(0) - 成功 
			notok(0xFF)-失败，超时
作      者：
日      期：2005-08-20
修改历史：
日期		修改人		修改描述
------		---------	-------------
*****************************************************************/
INT8U com1_query_ch(INT8U *ch);



/*****************************************************************
函数原型：com1_gets_keyboard
功能描述：串口1接收，允许按键取消
参数描述：
参数名称：		输入/输出？	类型		描述
-----------		-----------	------	   	-------
str_got			输出		INT8U*		得到的字符串
timeout_start	输入		INT32U		首字超时，单位mS，0死等
timeout			输入		INT16U		接收字节间隔超时，单位mS

 返  回  值：ok(0)-成功
			0x01-按退出键了
			notok(0xFF)-失败，超时
作      者	：许岩
日      期：2005-08-20
修改历史：
日期		修改人		修改描述
------		---------	-------------
*****************************************************************/
INT8U com1_gets_keyboard(INT8U *str_got, INT16U *rcv_len, INT32U timeout_start, INT16U timeout);



/*****************************************************************
函数原型：com1_snd_and_rcv
功能描述：串口1发送与接收
参数描述：
参数名称：	输入/输出？	类型		描述

返  回  值：ok-成功
			0x01-按退出键了
			notok-失败

作      者	：许岩
日      期：2005-05-19
修改历史：
日期		修改人		修改描述
------		---------	-------------
*****************************************************************/
INT8U com1_snd_and_rcv(INT8U *str_to_snd, INT16U snd_len, INT8U *str_rcv, INT16U *rcv_len, INT16U timeout_start, INT16U timeout);



/*****************************************************************
函数原型：com1_snd_and_rcv2
功能描述：串口1发送与接收，不带按键判断
参数描述：
参数名称：	输入/输出？	类型		描述

返  回  值：ok-成功
			notok-失败

作      者	：许岩
日      期：2005-05-19
修改历史：
日期		修改人		修改描述
------		---------	-------------
*****************************************************************/
INT8U com1_snd_and_rcv2(INT8U *str_to_snd, INT16U snd_len, INT8U *str_rcv, INT16U *rcv_len, INT16U timeout_start, INT16U timeout);



/******************************************************************************
 函数名称：beep
 功能描述：控制蜂鸣器鸣叫
 参数描述：
 参数名称：	输入/输出？	类型		描述
 _ms	输入		INT16U			要鸣叫的时间，单位ms

 返  回  值：无

 作      者	：许岩
 日      期：2004-09-02
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
******************************************************************************/
void beep(INT16U _ms);



/*****************************************************************
 函数原型：beep_success
 功能描述：蜂鸣器提示成功
 参数描述：
 参数名称：		输入/输出？	类型		描述
 -----------	-----------	------	   	-------

 返 回 值：无
 作    者：许岩
 日    期：2013-10-22
 修改历史：
 日期		修改人		修改描述
 ------		---------	-------------
*****************************************************************/
void beep_success(void);



/*****************************************************************
 函数原型：beep_failed
 功能描述：蜂鸣器提示失败
 参数描述：
 参数名称：		输入/输出？	类型		描述
 -----------	-----------	------	   	-------

 返 回 值：无
 作    者：许岩
 日    期：2013-10-22
 修改历史：
 日期		修改人		修改描述
 ------		---------	-------------
*****************************************************************/
void beep_failed(void);



/******************************************************************************
 函数名称：sleep_ms
 功能描述：延时函数
 参数名称：	输入/输出？	类型		描述
 _ms	输入	INT16U				要延时的倍数 1ms*?
 
 返  回  值：无
 
 作      者	：许岩
 日      期：2004-09-02
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
******************************************************************************/
void sleep_ms(INT16U _ms);



/******************************************************************************
 函数名称：cal_sec
 功能描述：计算从2000年1月1日到输入时间的秒数
 参数描述：
 参数名称：	输入/输出？	类型		描述
 time			输入			BUS_TIME*	要进行计算的时间，要求输入时间大于2000年
 
 返  回  值：秒数
   
 作      者	：许岩
 日      期：2006.1.9
 修改历史：
		日期		修改人		修改描述

******************************************************************************/
INT32U cal_sec(BUS_TIME * time);



/*****************************************************************
函数原型：Is_Leap
功能描述： 计算是否为闰年
参数描述：
参数名称：	输入/输出？ 类型		描述
			year	输入		uint 		需要判断是否为闰年的年份
			
返	回	 值：	0-不是闰年
				1-是闰年
				
作		 者 ：许岩
日		 期：2003-11-27
修改历史：
		日期		修改人		修改描述
		------		---------	-------------
*****************************************************************/
INT8U Is_Leap(INT16U year);









#endif

